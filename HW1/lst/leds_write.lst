


ARM Macro Assembler    Page 1 


    1 00000000         ; Filename:     leds_write.s
    2 00000000         ; Author:       <Add Your Names> 
    3 00000000         ; Description:  
    4 00000000         
    5 00000000                 export           leds_write
    6 00000000         ;*******************************************************
                       ************************* 
    7 00000000         ; Constant Variables (FLASH) Segment
    8 00000000         ;*******************************************************
                       ************************* 
    9 00000000                 AREA             FLASH, CODE, READONLY
   10 00000000                 align
   11 00000000         
   12 00000000         ;*******************************************************
                       ************************* 
   13 00000000         ;*******************************************************
                       *************************        
   14 00000000         leds_write
                               PROC
   15 00000000 E92D 01F0       PUSH             {R4-R8}
   16 00000004 F04F 0580       MOV              R5, #0x80   ; used to write a 1
                                                             to port
   17 00000008 F04F 0600       MOV              R6, #0x00   ; used to write a 0
                                                             to port
   18 0000000C F101 0301       ADD              R3, R1, #1  ; R1 acts as array 
                                                            size index
   19 00000010         
   20 00000010         write_loop                           ; for number of Neo
                                                            Pixels to write
   21 00000010 1E5B            SUBS             R3, R3, #1  ; subtract 1 from i
                                                            ndex
   22 00000012 2B00            CMP              R3, #0      ; is index zero
   23 00000014 D035            BEQ              done_write
   24 00000016 F850 4B04       LDR              R4, [R0], #4 ; read first LED 2
                                                            4-bit value
   25 0000001A F04F 0818       MOV              R8, #24     ; index on bit loop
                                                             for 24 bits in a p
                                                            ixel
   26 0000001E         
   27 0000001E         bit_loop
   28 0000001E 7015            STRB             R5, [R2]    ; all NeoPixel bits
                                                             begin with logic h
                                                            igh write to GPIO
   29 00000020 F414 0F00       TST              R4, #0x00800000 ; is MSB set
   30 00000024 EA4F 0444       MOV              R4, R4, LSL #1 ; shift register
                                                             left to get to nex
                                                            t bit
   31 00000028 D016            BEQ              write_zero
   32 0000002A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   33 0000002A         ;; Below is write a "1" to NeoPixel ;;
   34 0000002A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   35 0000002A F04F 0708       MOV              R7, #8      ; (8-1)*4+2 = 30 cl
                                                            ock cycles, need 40
                                                             high
   36 0000002E         high_delay1
   37 0000002E 1E7F            SUBS             R7, R7, #1
   38 00000030 D1FD            BNE              high_delay1
   39 00000032 BF00            NOP
   40 00000034 BF00            NOP



ARM Macro Assembler    Page 2 


   41 00000036 BF00            NOP
   42 00000038 BF00            NOP                          ; we need 10 instru
                                                            ction cycles of
   43 0000003A BF00            NOP                          ; overhead to get t
                                                            o 40 even
   44 0000003C 7016            STRB             R6, [R2]    ; clear GPIO pin
   45 0000003E F04F 0703       MOV              R7, #3      ; (3-1)*4+2 = 10 cl
                                                            ock cycles, need 22
                                                             low
   46 00000042         low_delay1
   47 00000042 1E7F            SUBS             R7, R7, #1
   48 00000044 D1FD            BNE              low_delay1
   49 00000046 BF00            NOP
   50 00000048 F1B8 0801       SUBS             R8, R8, #1  ; decrement bit ind
                                                            ex
   51 0000004C D0E0            BEQ              write_loop
   52 0000004E BF00            NOP
   53 00000050 BF00            NOP
   54 00000052 BF00            NOP
   55 00000054 BF00            NOP                          ; need 12 instructi
                                                            ons overhead to ach
                                                            eive 22
   56 00000056 E7E2            B                bit_loop
   57 00000058         
   58 00000058         write_zero
   59 00000058 F04F 0703       MOV              R7, #3      ; (3-1)*4+2 = 10 cl
                                                            ock cycles, need 20
                                                             high
   60 0000005C         high_delay0
   61 0000005C 1E7F            SUBS             R7, R7, #1
   62 0000005E D1FD            BNE              high_delay0
   63 00000060 BF00            NOP
   64 00000062 BF00            NOP                          ; we need 10 instru
                                                            ction cycles of
   65 00000064 BF00            NOP                          ; overhead to get t
                                                            o 20 even
   66 00000066 7016            STRB             R6, [R2]    ; clear GPIO pin
   67 00000068 F04F 0708       MOV              R7, #8      ; (8-1)*4+2 = 30 cl
                                                            ock cycles, need 42
                                                             low
   68 0000006C         low_delay0
   69 0000006C 1E7F            SUBS             R7, R7, #1
   70 0000006E D1FD            BNE              low_delay0
   71 00000070 BF00            NOP
   72 00000072 F1B8 0801       SUBS             R8, R8, #1  ; decrement bit ind
                                                            ex
   73 00000076 D0CB            BEQ              write_loop
   74 00000078 BF00            NOP
   75 0000007A BF00            NOP
   76 0000007C BF00            NOP
   77 0000007E BF00            NOP                          ; need 12 instructi
                                                            ons overhead to ach
                                                            eive 42
   78 00000080 E7CD            B                bit_loop
   79 00000082         
   80 00000082         done_write
   81 00000082 E8BD 01F0       POP              {R4-R8}
   82 00000086 4770            BX               LR          ; return from funct
                                                            ion



ARM Macro Assembler    Page 3 


   83 00000088                 ENDP
   84 00000088                 align
   85 00000088         
   86 00000088                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\obj\leds_write.d -o.\obj\leds_write.o -IC:\Users\Eric\Documen
ts\ECE_Classes\ECE353\Spring17\HW\HW1_Keil\Staff\RTE -IC:\Keil_v5\ARM\PACK\ARM\
CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.0.0\Device\Incl
ude\TM4C123 --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --prede
fine="__UVISION_VERSION SETA 520" --predefine="_RTE_ SETA 1" --predefine="TM4C1
23GH6PM SETA 1" --list=.\lst\leds_write.lst leds_write.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FLASH 00000000

Symbol: FLASH
   Definitions
      At line 9 in file leds_write.s
   Uses
      None
Comment: FLASH unused
bit_loop 0000001E

Symbol: bit_loop
   Definitions
      At line 27 in file leds_write.s
   Uses
      At line 56 in file leds_write.s
      At line 78 in file leds_write.s

done_write 00000082

Symbol: done_write
   Definitions
      At line 80 in file leds_write.s
   Uses
      At line 23 in file leds_write.s
Comment: done_write used once
high_delay0 0000005C

Symbol: high_delay0
   Definitions
      At line 60 in file leds_write.s
   Uses
      At line 62 in file leds_write.s
Comment: high_delay0 used once
high_delay1 0000002E

Symbol: high_delay1
   Definitions
      At line 36 in file leds_write.s
   Uses
      At line 38 in file leds_write.s
Comment: high_delay1 used once
leds_write 00000000

Symbol: leds_write
   Definitions
      At line 14 in file leds_write.s
   Uses
      At line 5 in file leds_write.s
Comment: leds_write used once
low_delay0 0000006C

Symbol: low_delay0
   Definitions
      At line 68 in file leds_write.s
   Uses
      At line 70 in file leds_write.s
Comment: low_delay0 used once
low_delay1 00000042




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: low_delay1
   Definitions
      At line 46 in file leds_write.s
   Uses
      At line 48 in file leds_write.s
Comment: low_delay1 used once
write_loop 00000010

Symbol: write_loop
   Definitions
      At line 20 in file leds_write.s
   Uses
      At line 51 in file leds_write.s
      At line 73 in file leds_write.s

write_zero 00000058

Symbol: write_zero
   Definitions
      At line 58 in file leds_write.s
   Uses
      At line 31 in file leds_write.s
Comment: write_zero used once
10 symbols
346 symbols in table
