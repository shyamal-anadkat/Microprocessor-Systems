


ARM Macro Assembler    Page 1 


    1 00000000         ; Filename:     leds_rotate.s
    2 00000000         ; Author:       <Add Your Name here> 
    3 00000000         ; Description:  
    4 00000000         
    5 00000000                 export           rotate_leds
    6 00000000                 export           rotate_mod_leds
    7 00000000         ;*******************************************************
                       ************************* 
    8 00000000         ; SRAM
    9 00000000         ;*******************************************************
                       ************************* 
   10 00000000                 AREA             SRAM, READWRITE
   11 00000000                 align
   12 00000000         
   13 00000000         ;*******************************************************
                       ************************* 
   14 00000000         ; Constant Variables (FLASH) Segment
   15 00000000         ;*******************************************************
                       ************************* 
   16 00000000                 AREA             FLASH, CODE, READONLY
   17 00000000                 align
   18 00000000         
   19 00000000         
   20 00000000         ;*******************************************************
                       ************************* 
   21 00000000         ;*******************************************************
                       *************************
   22 00000000         rotate_leds
                               PROC
   23 00000000 F1A1 0201       SUB              R2, R1, #1  ; R2 contains array
                                                            _size - 1, R1 was p
                                                            assed array_size
   24 00000004 EB00 0382       ADD              R3, R0, R2, LSL #2 ; R3 points 
                                                            at last word in arr
                                                            ay
   25 00000008 6819            LDR              R1, [R3]    ; R1 = led_array_ad
                                                            dr[array_size-1]
   26 0000000A         rotate_loop
   27 0000000A F853 2C04       LDR              R2, [R3,#-4]
   28 0000000E F843 2904       STR              R2, [R3], #-4
   29 00000012 4298            CMP              R0, R3      ; When R0 == R3 we 
                                                            are done with all b
                                                            ut last transfer
   30 00000014 D1F9            BNE              rotate_loop
   31 00000016 6019            STR              R1, [R3]    ; store the LED dat
                                                            a that wraps around
                                                            
   32 00000018         
   33 00000018 4770            BX               LR
   34 0000001A                 ENDP
   35 0000001A 00 00           align
   36 0000001C         
   37 0000001C         ;*******************************************************
                       ************************* 
   38 0000001C         ;*******************************************************
                       *************************
   39 0000001C         rotate_mod_leds
                               PROC
   40 0000001C F1A1 0201       SUB              R2, R1, #1  ; R2 contains array



ARM Macro Assembler    Page 2 


                                                            _size - 1, R1 was p
                                                            assed array_size
   41 00000020 EB00 0382       ADD              R3, R0, R2, LSL #2 ; R3 points 
                                                            at last word in arr
                                                            ay
   42 00000024 6819            LDR              R1, [R3]    ; R1 = led_array_ad
                                                            dr[array_size-1]
   43 00000026         rotate_mod_loop
   44 00000026 F853 2C04       LDR              R2, [R3,#-4]
   45 0000002A F502 62FF       ADD              R2, R2, #0x000007F8 ; green mai
                                                            ntains, red increme
                                                            nts, blue decrement
                                                            s
   46 0000002E F843 2904       STR              R2, [R3], #-4
   47 00000032 4298            CMP              R0, R3      ; When R0 == R3 we 
                                                            are done with all b
                                                            ut last transfer
   48 00000034 D1F7            BNE              rotate_mod_loop
   49 00000036 6019            STR              R1, [R3]    ; store the LED dat
                                                            a that wraps around
                                                            
   50 00000038         
   51 00000038 4770            BX               LR
   52 0000003A                 ENDP
   53 0000003A 00 00           align
   54 0000003C         
   55 0000003C         
   56 0000003C                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\obj\rotate_leds.d -o.\obj\rotate_leds.o -IC:\Users\Eric\Docum
ents\ECE_Classes\ECE353\Spring17\HW\HW1_Keil\Staff\RTE -IC:\Keil_v5\ARM\PACK\AR
M\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.0.0\Device\In
clude\TM4C123 --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --pre
define="__UVISION_VERSION SETA 520" --predefine="_RTE_ SETA 1" --predefine="TM4
C123GH6PM SETA 1" --list=.\lst\rotate_leds.lst rotate_leds.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

SRAM 00000000

Symbol: SRAM
   Definitions
      At line 10 in file rotate_leds.s
   Uses
      None
Comment: SRAM unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FLASH 00000000

Symbol: FLASH
   Definitions
      At line 16 in file rotate_leds.s
   Uses
      None
Comment: FLASH unused
rotate_leds 00000000

Symbol: rotate_leds
   Definitions
      At line 22 in file rotate_leds.s
   Uses
      At line 5 in file rotate_leds.s
Comment: rotate_leds used once
rotate_loop 0000000A

Symbol: rotate_loop
   Definitions
      At line 26 in file rotate_leds.s
   Uses
      At line 30 in file rotate_leds.s
Comment: rotate_loop used once
rotate_mod_leds 0000001C

Symbol: rotate_mod_leds
   Definitions
      At line 39 in file rotate_leds.s
   Uses
      At line 6 in file rotate_leds.s
Comment: rotate_mod_leds used once
rotate_mod_loop 00000026

Symbol: rotate_mod_loop
   Definitions
      At line 43 in file rotate_leds.s
   Uses
      At line 48 in file rotate_leds.s
Comment: rotate_mod_loop used once
5 symbols
342 symbols in table
