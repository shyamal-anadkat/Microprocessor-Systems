


ARM Macro Assembler    Page 1 


    1 00000000         ; Filename:     leds_write.s
    2 00000000         ; Author:       Shyamal Anadkat
    3 00000000         ; Description:  
    4 00000000         
    5 00000000                 export           write_leds
    6 00000000         ;*******************************************************
                       ************************* 
    7 00000000         ; Constant Variables (FLASH) Segment
    8 00000000         ;*******************************************************
                       ************************* 
    9 00000000                 AREA             FLASH, CODE, READONLY
   10 00000000                 align
   11 00000000         
   12 00000000         ;****************************************
   13 00000000         ; Rename registers for coad readability *
   14 00000000         ;****************************************
   15 00000000        0 
                       LED_ARRAY_ADDR
                               RN               R0          ; passed in as argu
                                                            ment
   16 00000000        1 
                       NUM_LEDS
                               RN               R1          ; passed in as argu
                                                            ment
   17 00000000        2 
                       GPIO_ADDR
                               RN               R2          ; passed in as argu
                                                            ment
   18 00000000        3 
                       LED_INDEX
                               RN               R3          ; working index for
                                                             accessing LED data
                                                            
   19 00000000        4 
                       LED_DATA
                               RN               R4          ; stores LED color 
                                                            data
   20 00000000        5 
                       LOGIC_HIGH
                               RN               R5          ; used to store a 0
                                                            x80 for writing log
                                                            ic high to GPIO
   21 00000000        6 
                       LOGIC_LOW
                               RN               R6          ; used to store a 0
                                                            x00 for wrting logi
                                                            c low to GPIO
   22 00000000        7 
                       DELAY_INDX
                               RN               R7          ; used as index in 
                                                            delay loops
   23 00000000        8 
                       BIT_INDX
                               RN               R8          ; used as bit index
                                                             for 24-bit loop
   24 00000000         
   25 00000000         ;*******************************************************
                       ************************* 
   26 00000000         ;*******************************************************



ARM Macro Assembler    Page 2 


                       *************************        
   27 00000000         write_leds
                               PROC
   28 00000000         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                       ;;;
   29 00000000         ;; LED_ARRAY_ADDR will be passed value of led_array_addr
                        ;;
   30 00000000         ;; NUM_LEDS will be passed array size (number of LEDs)  
                        ;;
   31 00000000         ;; GPIO_ADDR will be passed the address of the GPIO port
                        ;;
   32 00000000         ;; the LEDs are connected to                            
                        ;;
   33 00000000         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                       ;;;
   34 00000000         
   35 00000000 E92D 01FF       PUSH             {R0-R8}     ; Store off registe
                                                            rs modified to mLak
                                                            e EABI compliant
   36 00000004         
   37 00000004 F04F 0580       MOV              LOGIC_HIGH, #0x80 ; used to wri
                                                            te a 1 to port pin
   38 00000008 F04F 0600       MOV              LOGIC_LOW, #0x00 ; used to writ
                                                            e a 0 to port pin
   39 0000000C F101 0301       ADD              LED_INDEX, NUM_LEDS, #1 ; start
                                                             LED_INDEX at NUM_L
                                                            EDS+1 because decre
                                                            mented immediately 
                                                            in loop
   40 00000010         
   41 00000010         write_loop                           ; for number of Neo
                                                            Pixels to write
   42 00000010 1E5B            SUBS             LED_INDEX, LED_INDEX, #1 ; subt
                                                            ract 1 from index
   43 00000012 2B00            CMP              LED_INDEX, #0 
                                                            ; is index zero...
   44 00000014 D041            BEQ              done_write  ;    if so we are d
                                                            one
   45 00000016 F850 4B04       LDR              LED_DATA, [LED_ARRAY_ADDR], #4 
                                                            ; read 24-bit LED d
                                                            ata and increment p
                                                            ointer to next LED 
                                                            data
   46 0000001A F04F 0818       MOV              BIT_INDX, #24 ; index on bit lo
                                                            op for 24 bits in a
                                                             LED
   47 0000001E         
   48 0000001E         bit_loop
   49 0000001E 7015            STRB             LOGIC_HIGH, [GPIO_ADDR] ; all N
                                                            eoPixel bits begin 
                                                            with logic high wri
                                                            te to GPIO
   50 00000020 F414 0F00       TST              LED_DATA, #0x00800000 ; is MSB 
                                                            of LED_DATA set
   51 00000024 EA4F 0444       MOV              LED_DATA, LED_DATA, LSL #1 ; sh
                                                            ift register left t
                                                            o get to next bit
   52 00000028 D01C            BEQ              write_zero  ; if MSB of data wa
                                                            s not set we write 



ARM Macro Assembler    Page 3 


                                                            logic zero to seria
                                                            l out
   53 0000002A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   54 0000002A         ;; Below is write a "1" to NeoPixel ;;
   55 0000002A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   56 0000002A F04F 0708       MOV              DELAY_INDX, #8 ; currently at 4
                                                             clock cycles of hi
                                                            gh, need 40 total, 
                                                            (8-1)*4+2 = 30 cloc
                                                            k cycles
   57 0000002E         high_delay1                          ; loop below takes 
                                                            (N-1)*4+2 clock cyc
                                                            les.  Using N of 7,
                                                             to get 30 cyles of
                                                             delay
   58 0000002E 1E7F            SUBS             DELAY_INDX, DELAY_INDX, #1
   59 00000030 D1FD            BNE              high_delay1
   60 00000032         ;; add 6 NOPs to flush out needed delay for total of 40 
                       clocks with logic high on pin
   61 00000032 BF00            NOP
   62 00000034 BF00            NOP
   63 00000036 BF00            NOP
   64 00000038 BF00            NOP
   65 0000003A BF00            NOP
   66 0000003C BF00            NOP
   67 0000003E 7016            STRB             LOGIC_LOW, [GPIO_ADDR] ; clear 
                                                            GPIO pin as part of
                                                             a write of "1" to 
                                                            LED, now need 22 lo
                                                            w cycles
   68 00000040 F04F 0703       MOV              DELAY_INDX, #3 ; (3-1)*4+2 = 10
                                                             clock cycles delay
                                                            , need 22 low prior
                                                             to next write of "
                                                            1"
   69 00000044         low_delay1
   70 00000044 1E7F            SUBS             DELAY_INDX, DELAY_INDX, #1
   71 00000046 D1FD            BNE              low_delay1
   72 00000048 BF00            NOP
   73 0000004A F1B8 0801       SUBS             BIT_INDX, BIT_INDX, #1 ; decrem
                                                            ent bit index
   74 0000004E D0DF            BEQ              write_loop  ; done with this 24
                                                            -bits of LED data, 
                                                            move on to next 24-
                                                            bits of LED data
   75 00000050         ;; add NOPs to flush out needed delay for total of 22 cl
                       ocks with logic low on pin
   76 00000050 BF00            NOP
   77 00000052 BF00            NOP
   78 00000054 BF00            NOP
   79 00000056 BF00            NOP
   80 00000058 BF00            NOP
   81 0000005A BF00            NOP
   82 0000005C BF00            NOP
   83 0000005E BF00            NOP
   84 00000060 BF00            NOP
   85 00000062 E7DC            B                bit_loop
   86 00000064         
   87 00000064         write_zero



ARM Macro Assembler    Page 4 


   88 00000064 F04F 0703       MOV              DELAY_INDX, #3 ; (3-1)*4+2 = 10
                                                             clock cycles delay
                                                            , at 6 by end of th
                                                            is instr, need 20 h
                                                            igh
   89 00000068         high_delay0
   90 00000068 1E7F            SUBS             DELAY_INDX, DELAY_INDX, #1
   91 0000006A D1FD            BNE              high_delay0
   92 0000006C         ;; add NOPs to flush out needed delay for total of 20 cl
                       ocks with logic high on pin
   93 0000006C BF00            NOP
   94 0000006E BF00            NOP
   95 00000070 BF00            NOP
   96 00000072 BF00            NOP
   97 00000074 7016            STRB             LOGIC_LOW, [GPIO_ADDR] 
                                                            ; clear GPIO pin
   98 00000076 F04F 0708       MOV              DELAY_INDX, #8 ; (8-1)*4+2 = 30
                                                             clock cycles, need
                                                             42 low
   99 0000007A         low_delay0
  100 0000007A 1E7F            SUBS             DELAY_INDX, DELAY_INDX, #1
  101 0000007C D1FD            BNE              low_delay0
  102 0000007E BF00            NOP
  103 00000080 F1B8 0801       SUBS             BIT_INDX, BIT_INDX, #1 ; decrem
                                                            ent bit index
  104 00000084 D0C4            BEQ              write_loop  ; done with this 24
                                                            -bits of LED data, 
                                                            move on to next 24-
                                                            bits of LED data
  105 00000086         ;; add NOPs to flush out needed delay for total of 42 cl
                       ocks with logic low on pin
  106 00000086 BF00            NOP
  107 00000088 BF00            NOP
  108 0000008A BF00            NOP
  109 0000008C BF00            NOP
  110 0000008E BF00            NOP
  111 00000090 BF00            NOP
  112 00000092 BF00            NOP
  113 00000094 BF00            NOP
  114 00000096 BF00            NOP
  115 00000098 E7C1            B                bit_loop
  116 0000009A         
  117 0000009A         done_write
  118 0000009A E8BD 01FF       POP              {R0-R8}     ;Restore registers 
                                                            prior to return
  119 0000009E 4770            BX               LR          ; return from the f
                                                            unction
  120 000000A0                 ENDP
  121 000000A0                 align
  122 000000A0         
  123 000000A0                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\obj\write_leds.d -o.\obj\write_leds.o -IC:\ECE353\HW1\RTE\_HW
1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Kei
l\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" --predefine
="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 522" --predefine="_RTE
_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.\lst\write_leds.lst write_l
eds.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FLASH 00000000

Symbol: FLASH
   Definitions
      At line 9 in file write_leds.s
   Uses
      None
Comment: FLASH unused
bit_loop 0000001E

Symbol: bit_loop
   Definitions
      At line 48 in file write_leds.s
   Uses
      At line 85 in file write_leds.s
      At line 115 in file write_leds.s

done_write 0000009A

Symbol: done_write
   Definitions
      At line 117 in file write_leds.s
   Uses
      At line 44 in file write_leds.s
Comment: done_write used once
high_delay0 00000068

Symbol: high_delay0
   Definitions
      At line 89 in file write_leds.s
   Uses
      At line 91 in file write_leds.s
Comment: high_delay0 used once
high_delay1 0000002E

Symbol: high_delay1
   Definitions
      At line 57 in file write_leds.s
   Uses
      At line 59 in file write_leds.s
Comment: high_delay1 used once
low_delay0 0000007A

Symbol: low_delay0
   Definitions
      At line 99 in file write_leds.s
   Uses
      At line 101 in file write_leds.s
Comment: low_delay0 used once
low_delay1 00000044

Symbol: low_delay1
   Definitions
      At line 69 in file write_leds.s
   Uses
      At line 71 in file write_leds.s
Comment: low_delay1 used once
write_leds 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: write_leds
   Definitions
      At line 27 in file write_leds.s
   Uses
      At line 5 in file write_leds.s
Comment: write_leds used once
write_loop 00000010

Symbol: write_loop
   Definitions
      At line 41 in file write_leds.s
   Uses
      At line 74 in file write_leds.s
      At line 104 in file write_leds.s

write_zero 00000064

Symbol: write_zero
   Definitions
      At line 87 in file write_leds.s
   Uses
      At line 52 in file write_leds.s
Comment: write_zero used once
10 symbols
355 symbols in table
