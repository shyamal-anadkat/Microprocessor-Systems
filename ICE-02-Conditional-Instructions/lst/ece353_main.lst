


ARM Macro Assembler    Page 1 


    1 00000000         ; Filename:     main.s 
    2 00000000         ; Author:       Shyamal Anadkat
    3 00000000         ; Description:  ICE02
    4 00000000         
    5 00000000                 export           __main
    6 00000000         
    7 00000000         ;**********************************************
    8 00000000         ; SRAM
    9 00000000         ;**********************************************
   10 00000000                 AREA             SRAM, READWRITE
   11 00000000                 align
   12 00000000         
   13 00000000         ;**********************************************
   14 00000000         ; Constant Variables (FLASH) Segment
   15 00000000         ;**********************************************
   16 00000000                 AREA             FLASH, CODE, READONLY
   17 00000000                 align
   18 00000000         
   19 00000000         ;**********************************************
   20 00000000         ; Code (FLASH) Segment
   21 00000000         ; main assembly program
   22 00000000         ;**********************************************
   23 00000000         __main  PROC
   24 00000000         
   25 00000000         ; Initialization of R0 and R1
   26 00000000 F04F 000F       MOV              R0, #15
   27 00000004 F04F 0164       MOV              R1, #100
   28 00000008         
   29 00000008         ; Using only conditional instructions (no branches)
   30 00000008         ; Implement the if statemens below.
   31 00000008         
   32 00000008         
   33 00000008         
   34 00000008         ; (1) If R0 == 15, then R2 = 100 , else R2 = 1
   35 00000008 280F            CMP              R0, #15     ;0xF
   36 0000000A BF0C 2264       MOVEQ            R2, #100    ;0x64
   37 0000000E 2201            MOVNE            R2, #1
   38 00000010         
   39 00000010         ; (2) If R0 != 15, then R3 = 200 , else R3 = 2
   40 00000010 280F            CMP              R0, #15
   41 00000012 BF14 23C8       MOVNE            R3, #200    ;0xC8
   42 00000016 2302            MOVEQ            R3, #2      ;0x2
   43 00000018         
   44 00000018         ; (3) If R0 < 15, then  R4 = 300 , else R4 = 3
   45 00000018 280F            CMP              R0, #15
   46 0000001A BFB4 F44F 
              7496             MOVLT            R4, #300    ;0x12C
   47 00000020 2403            MOVGE            R4, #3
   48 00000022         
   49 00000022         ; (4) If R0 <= 15, then R5 = 400 , else R5 = 4
   50 00000022 280F            CMP              R0, #15
   51 00000024 BFD4 F44F 
              75C8             MOVLE            R5, #400    ;0x190
   52 0000002A 2504            MOVGT            R5, #4
   53 0000002C         
   54 0000002C         ; (5) If R0 > 15,  then R6 =500 , else R6 = 5
   55 0000002C 280F            CMP              R0, #15
   56 0000002E BFCC F44F 
              76FA             MOVGT            R6, #500



ARM Macro Assembler    Page 2 


   57 00000034 2605            MOVLE            R6, #5
   58 00000036         
   59 00000036         ; (6) If R0 >= 15, then R7 = 600 , else R7 = 6
   60 00000036 280F            CMP              R0, #15
   61 00000038 BFAC F44F 
              7716             MOVGE            R7, #600
   62 0000003E 2706            MOVLT            R7, #6
   63 00000040         
   64 00000040         
   65 00000040         
   66 00000040 F04F 0002       MOV              R0, #0x2
   67 00000044         
   68 00000044         ; (7) Implement the following switch statement using onl
                       y conditional instructions
   69 00000044         
   70 00000044         ; Hint: Start by setting R1 to the default value and the
                       n checking all of the
   71 00000044         ; other cases.
   72 00000044         
   73 00000044         ; switch(R0)
   74 00000044         ; {
   75 00000044         ;      case 0:
   76 00000044         ;      {
   77 00000044         ;           R1 = 0;
   78 00000044         ;           break;
   79 00000044         ;      }
   80 00000044         ;      case 1:
   81 00000044         ;      {
   82 00000044         ;           R1 = 10;
   83 00000044         ;           break;
   84 00000044         ;      }
   85 00000044         ;      case 2:
   86 00000044         ;      {
   87 00000044         ;           R1 = 20;
   88 00000044         ;           break;
   89 00000044         ;      }
   90 00000044         ;      case 3:
   91 00000044         ;      {
   92 00000044         ;           R1 = 30;
   93 00000044         ;           break;
   94 00000044         ;      }
   95 00000044         ;      default:
   96 00000044         ;      {
   97 00000044         ;           R1 = 0xFFFFFFFF;
   98 00000044         ;           break;
   99 00000044         ;      }
  100 00000044         ;  }
  101 00000044         
  102 00000044 F04F 31FF       MOV              R1, #0xFFFFFFFF
  103 00000048 2800            CMP              R0, #0
  104 0000004A BF08 2100       MOVEQ            R1, #0
  105 0000004E 2801            CMP              R0, #1
  106 00000050 BF08 210A       MOVEQ            R1, #10
  107 00000054 2802            CMP              R0, #2
  108 00000056 BF08 2114       MOVEQ            R1, #20
  109 0000005A 2803            CMP              R0, #3
  110 0000005C BF08 211E       MOVEQ            R1, #30
  111 00000060         
  112 00000060         



ARM Macro Assembler    Page 3 


  113 00000060         ; Initialization of R0 and R1
  114 00000060 F04F 000F       MOV              R0, #15
  115 00000064 F04F 0164       MOV              R1, #100
  116 00000068         
  117 00000068         ; (8) If R0 >= 15 OR R1 < 150, then R8 = 700 , else R8 =
                        7
  118 00000068 F04F 0807       MOV              R8, #7
  119 0000006C 280F            CMP              R0, #15
  120 0000006E BFA8 F44F 
              782F             MOVGE            R8, #700
  121 00000074 2996            CMP              R1, #150
  122 00000076 BFB8 F44F 
              782F             MOVLT            R8, #700
  123 0000007C         
  124 0000007C         
  125 0000007C         ; (9) If R0 >= 15 AND R1 < 150, then R9 = 800, else R9 =
                        8
  126 0000007C F44F 7948       MOV              R9, #800
  127 00000080 280F            CMP              R0, #15
  128 00000082 BFB8 F04F 
              0908             MOVLT            R9, #8
  129 00000088 2896            CMP              R0, #150
  130 0000008A BFA8 F04F 
              0908             MOVGE            R9, #8
  131 00000090         
  132 00000090         
  133 00000090 F240 00FF 
              F6CF 70F0        MOV32            R0, #0xFFF000FF
  134 00000098         ; (10) If bit 2 OR bit 21 of register R0 is a 1, then R1
                        = 900 , else R1 = 9
  135 00000098 F04F 0109       MOV              R1, #9
  136 0000009C F010 0F04       TST              R0, #0x00000004
  137 000000A0 BF18 F44F 
              7161             MOVNE            R1, #900
  138 000000A6 F410 1F00       TST              R0, #0x00200000
  139 000000AA BF18 F44F 
              7161             MOVNE            R1, #900
  140 000000B0         
  141 000000B0         
  142 000000B0         ; DO NOT MODIFY ANTHING BELOW THIS LINE!!! 
  143 000000B0         
  144 000000B0         INFINITE_LOOP
  145 000000B0 E7FE            B                INFINITE_LOOP
  146 000000B2         
  147 000000B2                 ENDP
  148 000000B2 00 00           align
  149 000000B4         
  150 000000B4         
  151 000000B4                 END
Command Line: --debug --xref --cpu=Cortex-M4.fp --apcs=interwork --depend=.\obj
\ece353_main.d -o.\obj\ece353_main.o -II:\ECE353\ICE-02-Conditional-Instruction
s\RTE -IC:\AppV\mdk_510\ARM\PACK\ARM\CMSIS\4.1.1\CMSIS\Include -IC:\AppV\mdk_51
0\ARM\PACK\Keil\TM4C_DFP\1.0.0\Device\Include\TM4C123 --predefine="__EVAL SETA 
1" --predefine="__MICROLIB SETA 1" --list=.\lst\ece353_main.lst ece353_main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

SRAM 00000000

Symbol: SRAM
   Definitions
      At line 10 in file ece353_main.s
   Uses
      None
Comment: SRAM unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FLASH 00000000

Symbol: FLASH
   Definitions
      At line 16 in file ece353_main.s
   Uses
      None
Comment: FLASH unused
INFINITE_LOOP 000000B0

Symbol: INFINITE_LOOP
   Definitions
      At line 144 in file ece353_main.s
   Uses
      At line 145 in file ece353_main.s
Comment: INFINITE_LOOP used once
__main 00000000

Symbol: __main
   Definitions
      At line 23 in file ece353_main.s
   Uses
      At line 5 in file ece353_main.s
Comment: __main used once
3 symbols
337 symbols in table
