


ARM Macro Assembler    Page 1 


    1 00000000                 export           matrixMultiply
    2 00000000                 AREA             FLASH, CODE, READONLY
    3 00000000                 ALIGN
    4 00000000         
    5 00000000         ;*******************************************************
                       ***********************
    6 00000000         ; Description
    7 00000000         ; Parameters
    8 00000000         ; 1st Parameter - Result Address
    9 00000000         ; 2nd Parameter - Matrix A Address
   10 00000000         ; 3rd Parameter - Matrix B Address
   11 00000000         ;*******************************************************
                       ***********************
   12 00000000         matrixMultiply
                               PROC
   13 00000000         
   14 00000000         ; Save registers modifed by this function
   15 00000000         ; <ADD CODE 5 >
   16 00000000         
   17 00000000         
   18 00000000         ; Load the 1st parameter from the stack into R2
   19 00000000         ; <ADD CODE  6 >
   20 00000000         
   21 00000000         
   22 00000000         ; Load the 2nd parameter from the stack into R0
   23 00000000         ; <ADD CODE  7 >
   24 00000000         
   25 00000000         
   26 00000000         ; Load the 3rd parameter from the stack into R1
   27 00000000         ; <ADD CODE  8 >
   28 00000000         
   29 00000000         
   30 00000000 F990 3000       LDRSB            R3, [R0, #0] ; R3  - A00
   31 00000004 F990 4001       LDRSB            R4, [R0, #1] ; R4  - A01
   32 00000008 F990 5002       LDRSB            R5, [R0, #2] ; R5  - A10
   33 0000000C F990 6003       LDRSB            R6, [R0, #3] ; R6  - A11
   34 00000010         
   35 00000010 F991 7000       LDRSB            R7, [R1, #0] ; R7  - B00
   36 00000014 F991 8001       LDRSB            R8, [R1, #1] ; R8  - B01
   37 00000018 F991 9002       LDRSB            R9, [R1, #2] ; R9  - B10
   38 0000001C F991 A003       LDRSB            R10,[R1, #3] ; R10 - B11
   39 00000020         
   40 00000020         ; After this point, we no longer use R0
   41 00000020         ; or R1, so we will use them in the calculations
   42 00000020         
   43 00000020         ; Calculate C00 = (A00 * B00) + (A01 * B10)
   44 00000020 FB03 F007       MUL              R0, R3, R7
   45 00000024 FB04 F109       MUL              R1, R4, R9
   46 00000028 4408            ADD              R0, R1, R0
   47 0000002A         
   48 0000002A 7010            STRB             R0, [R2, #0]
   49 0000002C         
   50 0000002C         ; Calculate C01 = (A00 * B01) + (A01 * B11)
   51 0000002C FB03 F008       MUL              R0, R3, R8
   52 00000030 FB04 F10A       MUL              R1, R4, R10
   53 00000034 4408            ADD              R0, R1, R0
   54 00000036         
   55 00000036 7050            STRB             R0, [R2, #1]
   56 00000038         



ARM Macro Assembler    Page 2 


   57 00000038         ; Calculate C10 = (A10 * B00) + (A11 * B10)
   58 00000038 FB05 F007       MUL              R0, R5, R7
   59 0000003C FB06 F109       MUL              R1, R6, R9
   60 00000040 4408            ADD              R0, R1, R0
   61 00000042         
   62 00000042 7090            STRB             R0, [R2, #2]
   63 00000044         
   64 00000044         ; Calculate C11 = (A10 * B01) + (A11 * B11)
   65 00000044 FB05 F008       MUL              R0, R5, R8
   66 00000048 FB06 F10A       MUL              R1, R6, R10
   67 0000004C 4408            ADD              R0, R1, R0
   68 0000004E         
   69 0000004E 70D0            STRB             R0, [R2, #3]
   70 00000050         
   71 00000050         ; Restore any saved registers from the stack
   72 00000050         ; <ADD CODE  9 >
   73 00000050         
   74 00000050 4770            BX               LR
   75 00000052                 ENDP
   76 00000052         
   77 00000052                 END
Command Line: --debug --xref --cpu=Cortex-M4.fp --apcs=interwork --depend=.\obj
\matrixmultiply.d -o.\obj\matrixmultiply.o -II:\ECE353\ICE-06-Stack\RTE -IC:\Ap
pV\mdk_510\ARM\PACK\ARM\CMSIS\4.1.1\CMSIS\Include -IC:\AppV\mdk_510\ARM\PACK\Ke
il\TM4C_DFP\1.0.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" --predefin
e="__MICROLIB SETA 1" --list=.\lst\matrixmultiply.lst matrixMultiply.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FLASH 00000000

Symbol: FLASH
   Definitions
      At line 2 in file matrixMultiply.s
   Uses
      None
Comment: FLASH unused
matrixMultiply 00000000

Symbol: matrixMultiply
   Definitions
      At line 12 in file matrixMultiply.s
   Uses
      At line 1 in file matrixMultiply.s
Comment: matrixMultiply used once
2 symbols
335 symbols in table
