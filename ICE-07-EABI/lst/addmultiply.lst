


ARM Macro Assembler    Page 1 


    1 00000000         ; Filename:     addMultiply.s 
    2 00000000         ; Author:       ece353 staff 
    3 00000000         ; Description:  
    4 00000000         
    5 00000000                 export           addMultiply
    6 00000000         
    7 00000000         ;**********************************************
    8 00000000         ; SRAM
    9 00000000         ;**********************************************
   10 00000000                 AREA             SRAM, READWRITE
   11 00000000                 align
   12 00000000         
   13 00000000         ;**********************************************
   14 00000000         ; Constant Variables (FLASH) Segment
   15 00000000         ;**********************************************
   16 00000000                 AREA             FLASH, CODE, READONLY
   17 00000000                 align
   18 00000000         
   19 00000000         
   20 00000000         ;**********************************************
   21 00000000         ; Four arrays of 8-bit signed numbers are 
   22 00000000         ; passed via the ; first four paramters.
   23 00000000         ; The 5th paramter indicates the length of the
   24 00000000         ; arrays. For each entry in the array, the
   25 00000000         ; following operation takes place.
   26 00000000         ;
   27 00000000         ; Array3[i] = (Array0[i] + Array1[i]) * Array2[i]
   28 00000000         ;
   29 00000000         ; Parameter 0       Array Address 0
   30 00000000         ; Parameter 1       Array Address 1
   31 00000000         ; Parameter 2       Array Address 2
   32 00000000         ; Parameter 3       Array Address 3
   33 00000000         ; Parameter 4       Array Size 
   34 00000000         ;
   35 00000000         ; Returns
   36 00000000         ;   if ALL parameters are valid, return 0
   37 00000000         ;   else return -1.
   38 00000000         ;
   39 00000000         ;  An address is valid if it is non zero
   40 00000000         ;  The size is valid if it is greater than zero
   41 00000000         ;**********************************************
   42 00000000         addMultiply
                               PROC
   43 00000000         
   44 00000000         ; Validate Parameters
   45 00000000         
   46 00000000         ; Save required registers
   47 00000000         
   48 00000000         ; For each index in the arrays, compute  
   49 00000000         ; Array3[i] = (Array0[i] + Array1[i]) * Array2[i]
   50 00000000         
   51 00000000         ; Restore registers saved to the stack
   52 00000000         
   53 00000000         ; Return from the loop
   54 00000000         
   55 00000000                 ENDP
   56 00000000         
   57 00000000         
   58 00000000         



ARM Macro Assembler    Page 2 


   59 00000000                 align
   60 00000000         
   61 00000000         
   62 00000000                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\obj\addmultiply.d -o.\obj\addmultiply.o -IC:\Users\joe.krache
y\Documents\ece353-src\student\ICE-07-EABI\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\
4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM
4C123 --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="
__UVISION_VERSION SETA 518" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6P
M SETA 1" --list=.\lst\addmultiply.lst addMultiply.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

SRAM 00000000

Symbol: SRAM
   Definitions
      At line 10 in file addMultiply.s
   Uses
      None
Comment: SRAM unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FLASH 00000000

Symbol: FLASH
   Definitions
      At line 16 in file addMultiply.s
   Uses
      None
Comment: FLASH unused
addMultiply 00000000

Symbol: addMultiply
   Definitions
      At line 42 in file addMultiply.s
   Uses
      At line 5 in file addMultiply.s
Comment: addMultiply used once
2 symbols
338 symbols in table
